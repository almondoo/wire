# 最新のCompose Specification（version指定は非推奨）
# Docker Compose v2.x 以降対応

services:
  # 開発環境（Docker Compose Watch対応）
  wire-dev:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.dev
    container_name: wire-dev
    volumes:
      # Goモジュールのキャッシュ（パフォーマンス向上）
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    working_dir: /workspace
    stdin_open: true
    tty: true
    command: /bin/bash
    develop:
      watch:
        # Goソースコードの変更を監視して同期
        - action: sync
          path: .
          target: /workspace
          ignore:
            - .git/
            - .github/
            - dockerfiles/
            - docs/
            - internal/wire/testdata/
        # go.modの変更時はイメージを再ビルド
        - action: rebuild
          path: go.mod
        - action: rebuild
          path: go.sum

  # 本番環境（Wireツールの実行）
  wire-prod:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.prod
      # ビルド時の引数（必要に応じて追加可能）
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: wire:latest
    container_name: wire-prod
    volumes:
      # プロジェクトをマウント（wire生成のため）
      - .:/app
    working_dir: /app
    user: "1000:1000"
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # チュートリアル実行環境（Watch対応）
  wire-tutorial:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.dev
    container_name: wire-tutorial
    volumes:
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    working_dir: /workspace/_tutorial
    stdin_open: true
    tty: true
    command: /bin/bash
    develop:
      watch:
        # チュートリアルファイルの変更を監視
        - action: sync+restart
          path: ./_tutorial
          target: /workspace/_tutorial
          ignore:
            - ./_tutorial/wire_gen.go

  # テスト実行環境
  wire-test:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.dev
    container_name: wire-test
    volumes:
      - .:/workspace
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    working_dir: /workspace
    command: go test -v ./...
    depends_on:
      wire-dev:
        condition: service_started
        restart: true

volumes:
  go-mod-cache:
    driver: local
    labels:
      description: "Goモジュールキャッシュ"
  go-build-cache:
    driver: local
    labels:
      description: "Goビルドキャッシュ"
